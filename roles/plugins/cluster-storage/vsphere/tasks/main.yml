- block:
  - name: 下载解压 govc 二进制文件
    get_url:
      url: "{{ govc_download_url }}"
      dest: "{{ base_dir }}/"

  - name: 解压 govc 二进制文件
    shell: "gunzip {{ base_dir }}/govc_linux_{{ architectures }}.gz"

  - name: 拷贝 govc 二进制文件
    copy:
      src: "{{ base_dir}}/govc_linux_{{ architectures }}"
      dest: "{{ bin_dir }}/govc"
      remote_src: yes
      mode: "0755"

  - name: 移除 govc 二进制文件
    file:
      name: "{{ base_dir }}/govc_linux_{{ architectures }}"
      state: absent

  - name: 创建 cloud-config 目录
    file:
      name: "{{ cloud_config_dir }}"
      state: directory

  - name: prepare vsphere.conf
    template:
      src: vsphere.conf.j2
      dest: "{{ cloud_config_dir }}/vsphere.conf"

  - name: prepare setup.sh
    template:
      src: setup.sh.j2
      dest: "{{ cloud_config_dir }}/setup.sh"

  - name: set disk.enableuuid to true for all vms
    shell: "bash setup.sh"
    args:
      chdir: "{{ cloud_config_dir }}"
    run_once: true

  - name: add cloud provider
    blockinfile:
      dest: "{{ item }}"
      block: |2
            - --cloud-provider=vsphere
            - --cloud-config={{ cloud_config_dir }}/vsphere.conf
      marker: "# {mark} add cloud provider"
      insertbefore: "image:"
    with_items:
    - /etc/kubernetes/manifests/kube-apiserver.yaml
    - /etc/kubernetes/manifests/kube-controller-manager.yaml

  - name: add volumeMounts
    blockinfile:
      dest: "{{ item }}"
      block: |2
            - mountPath: {{ cloud_config_dir }}
              name: cloud-config
              readOnly: true
      marker: "# {mark} add volumeMounts"
      insertafter: "volumeMounts:"
    with_items:
    - /etc/kubernetes/manifests/kube-apiserver.yaml
    - /etc/kubernetes/manifests/kube-controller-manager.yaml

  - name: add volumes
    blockinfile:
      dest: "{{ item }}"
      block: |2
          - hostPath:
              path: {{ cloud_config_dir }}
              type: DirectoryOrCreate
            name: cloud-config
      marker: "# {mark} add volumes"
      insertafter: "volumes:"
    with_items:
    - /etc/kubernetes/manifests/kube-apiserver.yaml
    - /etc/kubernetes/manifests/kube-controller-manager.yaml

  - name: modify kubelet cloud provider params on worker
    lineinfile:
      dest: /etc/sysconfig/kubelet
      regexp: '^KUBELET_EXTRA_ARGS'
      line: 'KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs --cloud-provider=vsphere'
    delegate_to: "{{ item }}"
    with_items: "{{ groups['kube-worker'] }}"
    run_once: true

  - name: restart kubelet on worker
    shell: "systemctl daemon-reload && systemctl restart kubelet"
    delegate_to: "{{ item }}"
    with_items: "{{ groups['kube-worker'] }}"
    run_once: true

  - name: modify kubelet cloud provider params on master
    lineinfile:
      dest: /etc/sysconfig/kubelet
      regexp: '^KUBELET_EXTRA_ARGS'
      line: 'KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs --cloud-provider=vsphere --cloud-config={{ cloud_config_dir }}/vsphere.conf'

  - name: restart kubelet on master
    shell: "systemctl daemon-reload && systemctl restart kubelet"
  when:
  - ansible_architecture == 'x86_64'