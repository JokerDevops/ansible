- block:
  - name: 读取所有备份
    find:
      paths: "{{ (playbook_dir + '/' + cluster_name + '/cluster-backup') | realpath  }}"
      patterns: "etcd-snapshot.tar.gz"
    register: etcd_back_paths

  - name: 校验备份文件是否存在
    assert:
      that: etcd_back_paths.files|length >= 1
      msg: "未获取到etcd备份文件。"
  delegate_to: localhost

- name: 确认 kubelet 已停止运行
  service:
    name: kubelet
    state: stopped

- name: 确认 etcd 已停止运行
  service:
    name: etcd
    state: stopped

- name: 确认 etcd 数据相关目录存在
  file:
    name: "{{ item }}"
    state: directory
  with_items:
  - /etc/kubernetes/backup/etcd

- name: 分发 etcd 数据库备份至所有 etcd 节点
  copy:
    src: "{{ playbook_dir }}/{{ cluster_name }}/cluster-backup/etcd-snapshot.tar.gz"
    dest: /etc/kubernetes/backup/etcd/etcd-snapshot.tar.gz

- name: 解压 etcd 数据库备份
  unarchive:
    src: "/etc/kubernetes/backup/etcd/etcd-snapshot.tar.gz"
    dest: "/etc/kubernetes/backup/etcd/"
    remote_src: yes

- name: 确认备份目录存在
  file: name=/backup/k8s state=directory

- name: 清理上次备份恢复数据
  file: name=/backup/k8s/etcd state=absent

- name: 恢复数据至etcd 数据目录
  shell: "cp -rf remote_src: yes /backup/k8s/"

- name: 清除 etcd 数据目录
  file:
    name: "{{ etcd_data_dir }}"
    state: absent

- name: etcd 数据恢复
  shell: "cd /etc/kubernetes/backup/etcd && \
    ETCDCTL_API=3 {{ bin_dir }}/etcdctl snapshot restore \
    etcd-snapshot.db \
    --data-dir={{ etcd_data_dir }} \
    --name etcd-{{ inventory_hostname }} \
    --initial-cluster {{ INITIAL_CLUSTER }} \
    --initial-cluster-token etcd-cluster-token \
    --initial-advertise-peer-urls https://{{ CURRENT_HOST_IP }}:2380"

- name: 移除各节点临时 etcd 备份文件
  file:
    name: "{{ item }}"
    state: absent
  with_items:
  - "/etc/kubernetes/backup/etcd/etcd-snapshot.tar.gz"
  - "/etc/kubernetes/backup/etcd/etcd-snapshot.db"

- name: 重新加载 daemon
  systemd:
    daemon_reload: yes

- name: 启动 etcd
  service:
    name: etcd
    state: restarted
    enabled: yes

- name: 启动 kubelet
  service:
    name: kubelet
    state: restarted
    enabled: yes