- name: Confirm kubelet has stopped running
  service:
    name: kubelet
    state: stopped

- name: Confirm etcd has stopped running
  service:
    name: etcd
    state: stopped

- name: Confirm etcd data related directories exist
  file:
    name: "{{ item }}"
    state: directory
  with_items:
  - /etc/kubernetes/backup/etcd

- name:  Copy etcd backup file to all etcd node
  copy:
    src: "/backup/{{ cluster_name }}/{{ custom_etcd_snapshot }}"
    dest: "/etc/kubernetes/backup/etcd/{{ custom_etcd_snapshot }}"

- name: Confirm backup directory exist
  file: name=/backup/k8s state=directory

- name: Clean up the last backup and restore data
  file: name=/backup/k8s/etcd state=absent

- name: Restore the data to the etcd data directory
  shell: "cp -rf /var/lib/etcd/ /backup/k8s/"

- name: Clean up etcd data directory
  file:
    name: "{{ etcd_data_dir }}"
    state: absent

- name: Restore etcd data
  shell: "cd /etc/kubernetes/backup/etcd && \
  ETCDCTL_API=3 {{ bin_dir }}/etcdctl snapshot restore \
  {{ custom_etcd_snapshot }} \
  --data-dir={{ etcd_data_dir }} \
  --name etcd-{{ inventory_hostname }} \
  --initial-cluster {{ INITIAL_CLUSTER }} \
  --initial-cluster-token etcd-cluster-token \
  --initial-advertise-peer-urls https://{{ CURRENT_HOST_IP }}:2380"

- name: Authorization etcd data directory
  file:
    path: "{{ etcd_data_dir }}"
    mode: '0755'

- name: Remove temporary etcd backup files from each node
  file:
    name: "{{ item }}"
    state: absent
  with_items:
  - "/etc/kubernetes/backup/etcd/{{ custom_etcd_snapshot }}"

- name: Systemctl daemon-reload
  systemd:
    daemon_reload: yes

- name: Restart etcd service
  service:
    name: etcd
    state: restarted
    enabled: yes

- name: Start kubelet service
  service:
    name: kubelet
    state: restarted
    enabled: yes